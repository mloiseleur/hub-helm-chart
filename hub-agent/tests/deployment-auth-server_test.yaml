suite: Hub deployment
templates:
  - deployment-auth-server.yaml
tests:
  - it: should have 3 replicas
    asserts:
      - equal:
          path: spec.replicas
          value: 3
  - it: should change image when image.tag is specified
    set:
      image:
        name: ghcr.io/traefik/hub-agent-kubernetes
        tag:
          alpha2.0
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/traefik/hub-agent-kubernetes:alpha2.0
  - it: should change the pullPolicy if specified
    set:
      image:
        pullPolicy:
          Always
    asserts:
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: Always
  - it: should have an image when image.name is specified
    set:
      image:
        name: ghcr.io/traefik/hub-agent-kubernetes
        tag: experimental
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: ghcr.io/traefik/hub-agent-kubernetes:experimental
  - it: should have annotations and/or  podsAnnotations when specified
    set:
      authServerDeployment:
        annotations:
          hub/plop: annotations
        podAnnotations:
          hub/plop: podAnnotations
    asserts:
      - equal:
          path: metadata.annotations.hub/plop
          value: annotations
      - equal:
          path: spec.template.metadata.annotations.hub/plop
          value: podAnnotations
  - it: should have specific label when specified
    set:
      authServerDeployment:
        podLabels:
          custom-label: plop
    asserts:
      - equal:
          path: spec.template.metadata.labels.custom-label
          value: plop
  - it: should provide a restrictive securityContext by default
    set:
      token: "test"
    asserts:
      - isNotEmpty:
          path: spec.template.spec.containers[0].securityContext
  - it: listen port & probes port should be the same
    set:
      token: "test"
    asserts:
      - contains:
          path: spec.template.spec.containers[0].args
          content: "--listen-addr=:8080"
      - equal:
          path: spec.template.spec.containers[0].readinessProbe.httpGet.port
          value: 8080
      - equal:
          path: spec.template.spec.containers[0].livenessProbe.httpGet.port
          value: 8080
